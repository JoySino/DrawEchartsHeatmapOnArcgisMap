/********************************使用方法******************************
 * tsq @2018.07.29 18:00
 * - 外部通过var ins=Dcq.Heatmap.Instance();获得单例对象实例
 * - 调用ins.init(param);传入地图和echarts对象进行初始化
 * - 调用ins.drawChart(datas);传入[[x1,y1][x2,y2]...]坐标组，即可完成热力图绘制
 ***********************************************************************/

+(function(a) {
	var b = function() {
		this._isInited = false;
		this._isHidden = true;
		this._isCleared = false
	};
	b._instance = null;
	b.Instance = function() {
		if(b._instance === null) {
			b._instance = new b()
		}
		return b._instance
	};
	b.prototype = {
		_defaults: {
			"map": null,
			"echarts": null,
			"pointSize": 6,
			"blurSize": 5
		},
		_defaultOption: {
			visualMap: {
				min: 0,
				max: 5,
				show: false,
				seriesIndex: 0,
				calculable: true,
				inRange: {
					color: ["blue", "blue", "green", "yellow", "red"]
				},
				textStyle: {
					color: "#fff"
				}
			},
			geo: {
				map: "",
				show: false,
				label: {
					emphasis: {
						show: false
					}
				},
				left: 0,
				top: 0,
				right: 0,
				bottom: 0,
				roam: false,
				itemStyle: {
					normal: {
						areaColor: "#323c48",
						borderColor: "#111"
					},
					emphasis: {
						areaColor: "#2a333d"
					}
				}
			},
			series: []
		},
		_seriesItem: {
			type: "heatmap",
			coordinateSystem: "geo",
			data: [
				[]
			],
			pointSize: 30,
			blurSize: 20
		},
		_myChart: null,
		_canAutoInit: function() {
			return this._defaults.map && this._defaults.echarts
		},
		init: function(c, d) {
			try {
				if(this._isInited && !d) {
					return this
				}
				if(!c || !c.map || !c.echarts) {
					throw Error("参数不能为空")
				}
				this._defaults = a.extend({}, this._defaults, c);
				this._isInited = true;
				this._initMyChart(c.map, c.echarts);
				return this
			} catch(f) {
				this._isInited = false;
				throw Error("初始化热力图失败！" + f.message)
			}
		},
		_initMyChart: function(i, g) {
			try {
				var f = new Echarts3Layer(i, g);
				var j = f.getEchartsContainer();
				var d = f.initECharts(j);
				this._isHidden = false;
				this._myChart = f;
				var c = this;
				a(window).on("resize", function() {
					c._resizeChart()
				})
			} catch(h) {
				throw Error("注册Echarts图层失败")
			}
		},
		isInited: function() {
			return this._isInited
		},
		drawChart: function(c) {
			if(!this._isInited || !this._myChart) {
				return
			}
			var d = this;
			this.clear(function() {
				var e = [];
				if(c && c.length) {
					for(var f = 0; f < c.length; f++) {
						var g = c[f];
						e.push(g.concat([1]))
					}
				}
				d._draw(e);
				d._isCleared = false
			})
		},
		_draw: function(c) {
			if(!c) {
				c = [
					[]
				]
			}
			var e = this._defaultOption,
				d = this._seriesItem;
			d.data = c;
			d.pointSize = this._defaults.pointSize;
			d.blurSize = this._defaults.blurSize;
			e.series = [d];
			this._myChart.setOption(e);
			if(this._isHidden && c.length) {
				this.show()
			} else {
				if(!c.length) {
					this.hide()
				}
			}
		},
		_resizeChart: function() {
			if(!this._isInited || this._isHidden || !this._myChart) {
				return
			}
			var g = this._myChart;
			var h = g.getECharts(),
				e = a(g.getEchartsContainer()),
				i = g.getMap();
			var d = a(i.container);
			var f = d.width(),
				c = d.height();
			e.width(f);
			e.height(c);
			h.resize()
		},
		showBlurInfo: function() {
			if(!this._isInited || !this._myChart) {
				return
			}
			var c = a(this._myChart.getMap().container).attr("id");
			if(!c) {
				c = "echarts" + new Date().format("yyyyMMddhhmmss")
			}
			var n = a("#" + c),
				d = c + "_blurInfo";
			var e = a("#" + d);
			if(!e || !e.length) {
				a('<div id="' + d + '" class="blurInfo"><div id="removeBtn">控制</div><div id="closeBlurInfo">关闭</div><p>Point Size : <span id="pointSize">0</span></p><input id="pointControl" type="range" max=50 min=0 value=0 step=1 /><p>Blur Radius : <span id="blurValue">0</span></p><input id="blurControl" type="range" max=50 min=0 value=0 step=1 /></div>').appendTo(n);
				e = a("#" + d);
				var o = this;
				a("#closeBlurInfo").off("click").on("click", function(i) {
					e.remove()
				});
				a("#removeBtn").off("click").on("click", function(i) {
					o.clear()
				});
				var l = this._myChart;
				var f = document.getElementById("blurControl");
				var k = document.getElementById("pointControl");
				var m = document.querySelectorAll("#" + d + " p~input[type=range]");
				var j = function(i) {
					var p = i.previousElementSibling.querySelector("span");
					i.addEventListener("input", function(q) {
						p.innerHTML = q.target.value
					})
				};
				for(var h = 0; h < m.length; h++) {
					j(m.item(h))
				}

				function g(q, i) {
					if(l) {
						l.setOption({
							series: [{
								pointSize: q,
								blurSize: i
							}]
						})
					}
				}
				f.addEventListener("change", function(i) {
					var p = +i.target.value;
					g(k.value, p)
				});
				k.addEventListener("change", function(i) {
					var p = +i.target.value;
					g(p, f.value)
				})
			}
		},
		clear: function(d) {
			if(this._isCleared) {
				return
			}
			var c = this._myChart.getECharts();
			c && c.clear && c.clear();
			this._draw([]);
			this._isCleared = true;
			if(d && (typeof d).toLocaleLowerCase() === "function") {
				d && d()
			}
		},
		toogle: function() {
			if(this._isHidden) {
				this.show()
			} else {
				this.hide()
			}
		},
		show: function() {
			if(this._isHidden && this._isInited && this._myChart) {
				this._isHidden = false;
				a(this._myChart.getEchartsContainer()).show();
				this._resizeChart()
			}
		},
		hide: function() {
			if(!this._isHidden && this._isInited && this._myChart) {
				this._isHidden = true;
				a(this._myChart.getEchartsContainer()).hide()
			}
		},
		remove: function() {
			if(!this._isInited || !this._myChart) {
				return
			}
			this.clear();
			var c = a(this._myChart.getEchartsContainer());
			c.remove();
			this._myChart = null;
			this._isInited = false
		}
	};
	if(!window.Dcq) {
		window.Dcq = {}
	}
	Dcq.Heatmap = b
})(jQuery);